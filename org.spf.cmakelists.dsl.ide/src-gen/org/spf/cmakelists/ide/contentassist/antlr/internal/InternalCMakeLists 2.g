/*
 * generated by Xtext 2.22.0
 */
grammar InternalCMakeLists;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.spf.cmakelists.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.spf.cmakelists.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.spf.cmakelists.services.CMakeListsGrammarAccess;

}
@parser::members {
	private CMakeListsGrammarAccess grammarAccess;

	public void setGrammarAccess(CMakeListsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCMakeListsFile
entryRuleCMakeListsFile
:
{ before(grammarAccess.getCMakeListsFileRule()); }
	 ruleCMakeListsFile
{ after(grammarAccess.getCMakeListsFileRule()); } 
	 EOF 
;

// Rule CMakeListsFile
ruleCMakeListsFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCMakeListsFileAccess().getInstructionsAssignment()); }
		(rule__CMakeListsFile__InstructionsAssignment)*
		{ after(grammarAccess.getCMakeListsFileAccess().getInstructionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCMakeMinimumRequired
entryRuleCMakeMinimumRequired
:
{ before(grammarAccess.getCMakeMinimumRequiredRule()); }
	 ruleCMakeMinimumRequired
{ after(grammarAccess.getCMakeMinimumRequiredRule()); } 
	 EOF 
;

// Rule CMakeMinimumRequired
ruleCMakeMinimumRequired 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCMakeMinimumRequiredAccess().getGroup()); }
		(rule__CMakeMinimumRequired__Group__0)
		{ after(grammarAccess.getCMakeMinimumRequiredAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjectInstruction
entryRuleProjectInstruction
:
{ before(grammarAccess.getProjectInstructionRule()); }
	 ruleProjectInstruction
{ after(grammarAccess.getProjectInstructionRule()); } 
	 EOF 
;

// Rule ProjectInstruction
ruleProjectInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectInstructionAccess().getGroup()); }
		(rule__ProjectInstruction__Group__0)
		{ after(grammarAccess.getProjectInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFindPackage
entryRuleFindPackage
:
{ before(grammarAccess.getFindPackageRule()); }
	 ruleFindPackage
{ after(grammarAccess.getFindPackageRule()); } 
	 EOF 
;

// Rule FindPackage
ruleFindPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFindPackageAccess().getGroup()); }
		(rule__FindPackage__Group__0)
		{ after(grammarAccess.getFindPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExecutable
entryRuleAddExecutable
:
{ before(grammarAccess.getAddExecutableRule()); }
	 ruleAddExecutable
{ after(grammarAccess.getAddExecutableRule()); } 
	 EOF 
;

// Rule AddExecutable
ruleAddExecutable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExecutableAccess().getGroup()); }
		(rule__AddExecutable__Group__0)
		{ after(grammarAccess.getAddExecutableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getAlternatives()); }
		(rule__Path__Alternatives)
		{ after(grammarAccess.getPathAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExecutable
entryRuleExecutable
:
{ before(grammarAccess.getExecutableRule()); }
	 ruleExecutable
{ after(grammarAccess.getExecutableRule()); } 
	 EOF 
;

// Rule Executable
ruleExecutable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExecutableAccess().getGroup()); }
		(rule__Executable__Group__0)
		{ after(grammarAccess.getExecutableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAmentTargetDependencies
entryRuleAmentTargetDependencies
:
{ before(grammarAccess.getAmentTargetDependenciesRule()); }
	 ruleAmentTargetDependencies
{ after(grammarAccess.getAmentTargetDependenciesRule()); } 
	 EOF 
;

// Rule AmentTargetDependencies
ruleAmentTargetDependencies 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAmentTargetDependenciesAccess().getGroup()); }
		(rule__AmentTargetDependencies__Group__0)
		{ after(grammarAccess.getAmentTargetDependenciesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAmentPackageInstruction
entryRuleAmentPackageInstruction
:
{ before(grammarAccess.getAmentPackageInstructionRule()); }
	 ruleAmentPackageInstruction
{ after(grammarAccess.getAmentPackageInstructionRule()); } 
	 EOF 
;

// Rule AmentPackageInstruction
ruleAmentPackageInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAmentPackageInstructionAccess().getGroup()); }
		(rule__AmentPackageInstruction__Group__0)
		{ after(grammarAccess.getAmentPackageInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstallTargets
entryRuleInstallTargets
:
{ before(grammarAccess.getInstallTargetsRule()); }
	 ruleInstallTargets
{ after(grammarAccess.getInstallTargetsRule()); } 
	 EOF 
;

// Rule InstallTargets
ruleInstallTargets 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstallTargetsAccess().getGroup()); }
		(rule__InstallTargets__Group__0)
		{ after(grammarAccess.getInstallTargetsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstallDirectory
entryRuleInstallDirectory
:
{ before(grammarAccess.getInstallDirectoryRule()); }
	 ruleInstallDirectory
{ after(grammarAccess.getInstallDirectoryRule()); } 
	 EOF 
;

// Rule InstallDirectory
ruleInstallDirectory 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstallDirectoryAccess().getGroup()); }
		(rule__InstallDirectory__Group__0)
		{ after(grammarAccess.getInstallDirectoryAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfInstruction
entryRuleIfInstruction
:
{ before(grammarAccess.getIfInstructionRule()); }
	 ruleIfInstruction
{ after(grammarAccess.getIfInstructionRule()); } 
	 EOF 
;

// Rule IfInstruction
ruleIfInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfInstructionAccess().getGroup()); }
		(rule__IfInstruction__Group__0)
		{ after(grammarAccess.getIfInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetInstruction
entryRuleSetInstruction
:
{ before(grammarAccess.getSetInstructionRule()); }
	 ruleSetInstruction
{ after(grammarAccess.getSetInstructionRule()); } 
	 EOF 
;

// Rule SetInstruction
ruleSetInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetInstructionAccess().getGroup()); }
		(rule__SetInstruction__Group__0)
		{ after(grammarAccess.getSetInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddCompileOptions
entryRuleAddCompileOptions
:
{ before(grammarAccess.getAddCompileOptionsRule()); }
	 ruleAddCompileOptions
{ after(grammarAccess.getAddCompileOptionsRule()); } 
	 EOF 
;

// Rule AddCompileOptions
ruleAddCompileOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddCompileOptionsAccess().getGroup()); }
		(rule__AddCompileOptions__Group__0)
		{ after(grammarAccess.getAddCompileOptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUndefinedInstruction
entryRuleUndefinedInstruction
:
{ before(grammarAccess.getUndefinedInstructionRule()); }
	 ruleUndefinedInstruction
{ after(grammarAccess.getUndefinedInstructionRule()); } 
	 EOF 
;

// Rule UndefinedInstruction
ruleUndefinedInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getGroup()); }
		(rule__UndefinedInstruction__Group__0)
		{ after(grammarAccess.getUndefinedInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getCMakeMinimumRequiredParserRuleCall_0()); }
		ruleCMakeMinimumRequired
		{ after(grammarAccess.getInstructionAccess().getCMakeMinimumRequiredParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getProjectInstructionParserRuleCall_1()); }
		ruleProjectInstruction
		{ after(grammarAccess.getInstructionAccess().getProjectInstructionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getFindPackageParserRuleCall_2()); }
		ruleFindPackage
		{ after(grammarAccess.getInstructionAccess().getFindPackageParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAddExecutableParserRuleCall_3()); }
		ruleAddExecutable
		{ after(grammarAccess.getInstructionAccess().getAddExecutableParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAmentTargetDependenciesParserRuleCall_4()); }
		ruleAmentTargetDependencies
		{ after(grammarAccess.getInstructionAccess().getAmentTargetDependenciesParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAmentPackageInstructionParserRuleCall_5()); }
		ruleAmentPackageInstruction
		{ after(grammarAccess.getInstructionAccess().getAmentPackageInstructionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getInstallTargetsParserRuleCall_6()); }
		ruleInstallTargets
		{ after(grammarAccess.getInstructionAccess().getInstallTargetsParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getInstallDirectoryParserRuleCall_7()); }
		ruleInstallDirectory
		{ after(grammarAccess.getInstructionAccess().getInstallDirectoryParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getIfInstructionParserRuleCall_8()); }
		ruleIfInstruction
		{ after(grammarAccess.getInstructionAccess().getIfInstructionParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getSetInstructionParserRuleCall_9()); }
		ruleSetInstruction
		{ after(grammarAccess.getInstructionAccess().getSetInstructionParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getAddCompileOptionsParserRuleCall_10()); }
		ruleAddCompileOptions
		{ after(grammarAccess.getInstructionAccess().getAddCompileOptionsParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getUndefinedInstructionParserRuleCall_11()); }
		ruleUndefinedInstruction
		{ after(grammarAccess.getInstructionAccess().getUndefinedInstructionParserRuleCall_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getGroup_1()); }
		(rule__Path__Group_1__0)
		{ after(grammarAccess.getPathAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getGroup_2()); }
		(rule__Path__Group_2__0)
		{ after(grammarAccess.getPathAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPathAccess().getGroup_3()); }
		(rule__Path__Group_3__0)
		{ after(grammarAccess.getPathAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfInstructionAccess().getPredicateAssignment_3_0()); }
		(rule__IfInstruction__PredicateAssignment_3_0)
		{ after(grammarAccess.getIfInstructionAccess().getPredicateAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getIfInstructionAccess().getORKeyword_3_1()); }
		'OR'
		{ after(grammarAccess.getIfInstructionAccess().getORKeyword_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getIfInstructionAccess().getMATCHESKeyword_3_2()); }
		'MATCHES'
		{ after(grammarAccess.getIfInstructionAccess().getMATCHESKeyword_3_2()); }
	)
	|
	(
		{ before(grammarAccess.getIfInstructionAccess().getIDTerminalRuleCall_3_3()); }
		RULE_ID
		{ after(grammarAccess.getIfInstructionAccess().getIDTerminalRuleCall_3_3()); }
	)
	|
	(
		{ before(grammarAccess.getIfInstructionAccess().getSTRINGTerminalRuleCall_3_4()); }
		RULE_STRING
		{ after(grammarAccess.getIfInstructionAccess().getSTRINGTerminalRuleCall_3_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetInstructionAccess().getArgumentsAssignment_3_0()); }
		(rule__SetInstruction__ArgumentsAssignment_3_0)
		{ after(grammarAccess.getSetInstructionAccess().getArgumentsAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetInstructionAccess().getArgumentsAssignment_3_1()); }
		(rule__SetInstruction__ArgumentsAssignment_3_1)
		{ after(grammarAccess.getSetInstructionAccess().getArgumentsAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__ArgumentsAlternatives_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetInstructionAccess().getArgumentsSTRINGTerminalRuleCall_3_0_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getSetInstructionAccess().getArgumentsSTRINGTerminalRuleCall_3_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetInstructionAccess().getArgumentsPathParserRuleCall_3_0_0_1()); }
		rulePath
		{ after(grammarAccess.getSetInstructionAccess().getArgumentsPathParserRuleCall_3_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsAssignment_2_0()); }
		(rule__UndefinedInstruction__ArgumentsAssignment_2_0)
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsAssignment_2_1()); }
		(rule__UndefinedInstruction__ArgumentsAssignment_2_1)
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__ArgumentsAlternatives_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsSTRINGTerminalRuleCall_2_0_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsSTRINGTerminalRuleCall_2_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsPathParserRuleCall_2_0_0_1()); }
		rulePath
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsPathParserRuleCall_2_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsDECORATED_PACKAGETerminalRuleCall_2_0_0_2()); }
		RULE_DECORATED_PACKAGE
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsDECORATED_PACKAGETerminalRuleCall_2_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CMakeMinimumRequired__Group__0__Impl
	rule__CMakeMinimumRequired__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMakeMinimumRequiredAccess().getCmake_minimum_requiredKeyword_0()); }
	'cmake_minimum_required'
	{ after(grammarAccess.getCMakeMinimumRequiredAccess().getCmake_minimum_requiredKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CMakeMinimumRequired__Group__1__Impl
	rule__CMakeMinimumRequired__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMakeMinimumRequiredAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getCMakeMinimumRequiredAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CMakeMinimumRequired__Group__2__Impl
	rule__CMakeMinimumRequired__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMakeMinimumRequiredAccess().getVERSIONKeyword_2()); }
	'VERSION'
	{ after(grammarAccess.getCMakeMinimumRequiredAccess().getVERSIONKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CMakeMinimumRequired__Group__3__Impl
	rule__CMakeMinimumRequired__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMakeMinimumRequiredAccess().getVersionAssignment_3()); }
	(rule__CMakeMinimumRequired__VersionAssignment_3)
	{ after(grammarAccess.getCMakeMinimumRequiredAccess().getVersionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CMakeMinimumRequired__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCMakeMinimumRequiredAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getCMakeMinimumRequiredAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProjectInstruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectInstruction__Group__0__Impl
	rule__ProjectInstruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectInstructionAccess().getProjectInstructionAction_0()); }
	()
	{ after(grammarAccess.getProjectInstructionAccess().getProjectInstructionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectInstruction__Group__1__Impl
	rule__ProjectInstruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectInstructionAccess().getProjectKeyword_1()); }
	'project'
	{ after(grammarAccess.getProjectInstructionAccess().getProjectKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectInstruction__Group__2__Impl
	rule__ProjectInstruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectInstructionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getProjectInstructionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectInstruction__Group__3__Impl
	rule__ProjectInstruction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectInstructionAccess().getDeclaredPackageNameAssignment_3()); }
	(rule__ProjectInstruction__DeclaredPackageNameAssignment_3)
	{ after(grammarAccess.getProjectInstructionAccess().getDeclaredPackageNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProjectInstruction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectInstructionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getProjectInstructionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__0__Impl
	rule__FindPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getFindPackageAction_0()); }
	()
	{ after(grammarAccess.getFindPackageAccess().getFindPackageAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__1__Impl
	rule__FindPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getFind_packageKeyword_1()); }
	'find_package'
	{ after(grammarAccess.getFindPackageAccess().getFind_packageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__2__Impl
	rule__FindPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFindPackageAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__3__Impl
	rule__FindPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getNameAssignment_3()); }
	(rule__FindPackage__NameAssignment_3)
	{ after(grammarAccess.getFindPackageAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__4__Impl
	rule__FindPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getRequiredAssignment_4()); }
	(rule__FindPackage__RequiredAssignment_4)?
	{ after(grammarAccess.getFindPackageAccess().getRequiredAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__5__Impl
	rule__FindPackage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getGroup_5()); }
	(rule__FindPackage__Group_5__0)?
	{ after(grammarAccess.getFindPackageAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getFindPackageAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FindPackage__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group_5__0__Impl
	rule__FindPackage__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFindPackageAccess().getCOMPONENTSKeyword_5_0()); }
	'COMPONENTS'
	{ after(grammarAccess.getFindPackageAccess().getCOMPONENTSKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FindPackage__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFindPackageAccess().getComponentsAssignment_5_1()); }
		(rule__FindPackage__ComponentsAssignment_5_1)
		{ after(grammarAccess.getFindPackageAccess().getComponentsAssignment_5_1()); }
	)
	(
		{ before(grammarAccess.getFindPackageAccess().getComponentsAssignment_5_1()); }
		(rule__FindPackage__ComponentsAssignment_5_1)*
		{ after(grammarAccess.getFindPackageAccess().getComponentsAssignment_5_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExecutable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutable__Group__0__Impl
	rule__AddExecutable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutableAccess().getAdd_executableKeyword_0()); }
	'add_executable'
	{ after(grammarAccess.getAddExecutableAccess().getAdd_executableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutable__Group__1__Impl
	rule__AddExecutable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutableAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddExecutableAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutable__Group__2__Impl
	rule__AddExecutable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutableAccess().getNameAssignment_2()); }
	(rule__AddExecutable__NameAssignment_2)
	{ after(grammarAccess.getAddExecutableAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutable__Group__3__Impl
	rule__AddExecutable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAddExecutableAccess().getSourcesAssignment_3()); }
		(rule__AddExecutable__SourcesAssignment_3)
		{ after(grammarAccess.getAddExecutableAccess().getSourcesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getAddExecutableAccess().getSourcesAssignment_3()); }
		(rule__AddExecutable__SourcesAssignment_3)*
		{ after(grammarAccess.getAddExecutableAccess().getSourcesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExecutable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExecutableAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAddExecutableAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__0__Impl
	rule__Path__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
	{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__1__Impl
	rule__Path__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getPathAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_1_2()); }
	RULE_ID
	{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_2__0__Impl
	rule__Path__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getDollarSignKeyword_2_0()); }
	'$'
	{ after(grammarAccess.getPathAccess().getDollarSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_2__1__Impl
	rule__Path__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getLeftCurlyBracketKeyword_2_1()); }
	'{'
	{ after(grammarAccess.getPathAccess().getLeftCurlyBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_2__2__Impl
	rule__Path__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_2_2()); }
	RULE_ID
	{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getRightCurlyBracketKeyword_2_3()); }
	'}'
	{ after(grammarAccess.getPathAccess().getRightCurlyBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_3__0__Impl
	rule__Path__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getIDTerminalRuleCall_3_0()); }
	RULE_ID
	{ after(grammarAccess.getPathAccess().getIDTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_3__1__Impl
	rule__Path__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getSolidusKeyword_3_1()); }
	'/'
	{ after(grammarAccess.getPathAccess().getSolidusKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPathParserRuleCall_3_2()); }
	rulePath
	{ after(grammarAccess.getPathAccess().getPathParserRuleCall_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Executable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Executable__Group__0__Impl
	rule__Executable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Executable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutableAccess().getExecutableAction_0()); }
	()
	{ after(grammarAccess.getExecutableAccess().getExecutableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Executable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Executable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Executable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExecutableAccess().getNameAssignment_1()); }
	(rule__Executable__NameAssignment_1)
	{ after(grammarAccess.getExecutableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AmentTargetDependencies__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentTargetDependencies__Group__0__Impl
	rule__AmentTargetDependencies__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentTargetDependenciesAccess().getAment_target_dependenciesKeyword_0()); }
	'ament_target_dependencies'
	{ after(grammarAccess.getAmentTargetDependenciesAccess().getAment_target_dependenciesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentTargetDependencies__Group__1__Impl
	rule__AmentTargetDependencies__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentTargetDependenciesAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAmentTargetDependenciesAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentTargetDependencies__Group__2__Impl
	rule__AmentTargetDependencies__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentTargetDependenciesAccess().getNameAssignment_2()); }
	(rule__AmentTargetDependencies__NameAssignment_2)
	{ after(grammarAccess.getAmentTargetDependenciesAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentTargetDependencies__Group__3__Impl
	rule__AmentTargetDependencies__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentTargetDependenciesAccess().getDependenciesAssignment_3()); }
	(rule__AmentTargetDependencies__DependenciesAssignment_3)*
	{ after(grammarAccess.getAmentTargetDependenciesAccess().getDependenciesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentTargetDependencies__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentTargetDependenciesAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAmentTargetDependenciesAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AmentPackageInstruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentPackageInstruction__Group__0__Impl
	rule__AmentPackageInstruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentPackageInstructionAccess().getAmentPackageInstructionAction_0()); }
	()
	{ after(grammarAccess.getAmentPackageInstructionAccess().getAmentPackageInstructionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentPackageInstruction__Group__1__Impl
	rule__AmentPackageInstruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentPackageInstructionAccess().getAment_packageKeyword_1()); }
	'ament_package'
	{ after(grammarAccess.getAmentPackageInstructionAccess().getAment_packageKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentPackageInstruction__Group__2__Impl
	rule__AmentPackageInstruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentPackageInstructionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAmentPackageInstructionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AmentPackageInstruction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentPackageInstruction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAmentPackageInstructionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAmentPackageInstructionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstallTargets__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__0__Impl
	rule__InstallTargets__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getInstallKeyword_0()); }
	'install'
	{ after(grammarAccess.getInstallTargetsAccess().getInstallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__1__Impl
	rule__InstallTargets__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInstallTargetsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__2__Impl
	rule__InstallTargets__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getTARGETSKeyword_2()); }
	'TARGETS'
	{ after(grammarAccess.getInstallTargetsAccess().getTARGETSKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__3__Impl
	rule__InstallTargets__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getTargetsAssignment_3()); }
	(rule__InstallTargets__TargetsAssignment_3)*
	{ after(grammarAccess.getInstallTargetsAccess().getTargetsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__4__Impl
	rule__InstallTargets__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getRuntimeAssignment_4()); }
	(rule__InstallTargets__RuntimeAssignment_4)?
	{ after(grammarAccess.getInstallTargetsAccess().getRuntimeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__5__Impl
	rule__InstallTargets__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getDESTINATIONKeyword_5()); }
	'DESTINATION'
	{ after(grammarAccess.getInstallTargetsAccess().getDESTINATIONKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__6__Impl
	rule__InstallTargets__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getDestinationAssignment_6()); }
	(rule__InstallTargets__DestinationAssignment_6)
	{ after(grammarAccess.getInstallTargetsAccess().getDestinationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallTargets__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallTargetsAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getInstallTargetsAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstallDirectory__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__0__Impl
	rule__InstallDirectory__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getInstallKeyword_0()); }
	'install'
	{ after(grammarAccess.getInstallDirectoryAccess().getInstallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__1__Impl
	rule__InstallDirectory__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getInstallDirectoryAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__2__Impl
	rule__InstallDirectory__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getDIRECTORYKeyword_2()); }
	'DIRECTORY'
	{ after(grammarAccess.getInstallDirectoryAccess().getDIRECTORYKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__3__Impl
	rule__InstallDirectory__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getDirectoryAssignment_3()); }
	(rule__InstallDirectory__DirectoryAssignment_3)
	{ after(grammarAccess.getInstallDirectoryAccess().getDirectoryAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__4__Impl
	rule__InstallDirectory__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getDESTINATIONKeyword_4()); }
	'DESTINATION'
	{ after(grammarAccess.getInstallDirectoryAccess().getDESTINATIONKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__5__Impl
	rule__InstallDirectory__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getDestinationAssignment_5()); }
	(rule__InstallDirectory__DestinationAssignment_5)
	{ after(grammarAccess.getInstallDirectoryAccess().getDestinationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__6__Impl
	rule__InstallDirectory__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getGroup_6()); }
	(rule__InstallDirectory__Group_6__0)?
	{ after(grammarAccess.getInstallDirectoryAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getInstallDirectoryAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstallDirectory__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group_6__0__Impl
	rule__InstallDirectory__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getFILES_MATCHINGKeyword_6_0()); }
	'FILES_MATCHING'
	{ after(grammarAccess.getInstallDirectoryAccess().getFILES_MATCHINGKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getInstallDirectoryAccess().getGroup_6_1()); }
		(rule__InstallDirectory__Group_6_1__0)
		{ after(grammarAccess.getInstallDirectoryAccess().getGroup_6_1()); }
	)
	(
		{ before(grammarAccess.getInstallDirectoryAccess().getGroup_6_1()); }
		(rule__InstallDirectory__Group_6_1__0)*
		{ after(grammarAccess.getInstallDirectoryAccess().getGroup_6_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstallDirectory__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group_6_1__0__Impl
	rule__InstallDirectory__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getPATTERNKeyword_6_1_0()); }
	'PATTERN'
	{ after(grammarAccess.getInstallDirectoryAccess().getPATTERNKeyword_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstallDirectory__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstallDirectoryAccess().getPatternsAssignment_6_1_1()); }
	(rule__InstallDirectory__PatternsAssignment_6_1_1)
	{ after(grammarAccess.getInstallDirectoryAccess().getPatternsAssignment_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfInstruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__0__Impl
	rule__IfInstruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getIfInstructionAction_0()); }
	()
	{ after(grammarAccess.getIfInstructionAccess().getIfInstructionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__1__Impl
	rule__IfInstruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getIfInstructionAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__2__Impl
	rule__IfInstruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIfInstructionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__3__Impl
	rule__IfInstruction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getAlternatives_3()); }
	(rule__IfInstruction__Alternatives_3)*
	{ after(grammarAccess.getIfInstructionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__4__Impl
	rule__IfInstruction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIfInstructionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__5__Impl
	rule__IfInstruction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getInstructionsAssignment_5()); }
	(rule__IfInstruction__InstructionsAssignment_5)*
	{ after(grammarAccess.getIfInstructionAccess().getInstructionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__6__Impl
	rule__IfInstruction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getEndifKeyword_6()); }
	'endif'
	{ after(grammarAccess.getIfInstructionAccess().getEndifKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__7__Impl
	rule__IfInstruction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getLeftParenthesisKeyword_7()); }
	'('
	{ after(grammarAccess.getIfInstructionAccess().getLeftParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfInstruction__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfInstructionAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getIfInstructionAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetInstruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetInstruction__Group__0__Impl
	rule__SetInstruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetInstructionAccess().getSetKeyword_0()); }
	'set'
	{ after(grammarAccess.getSetInstructionAccess().getSetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetInstruction__Group__1__Impl
	rule__SetInstruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetInstructionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSetInstructionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetInstruction__Group__2__Impl
	rule__SetInstruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetInstructionAccess().getVariableAssignment_2()); }
	(rule__SetInstruction__VariableAssignment_2)
	{ after(grammarAccess.getSetInstructionAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetInstruction__Group__3__Impl
	rule__SetInstruction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetInstructionAccess().getAlternatives_3()); }
	(rule__SetInstruction__Alternatives_3)*
	{ after(grammarAccess.getSetInstructionAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetInstruction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetInstructionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSetInstructionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddCompileOptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCompileOptions__Group__0__Impl
	rule__AddCompileOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCompileOptionsAccess().getAdd_compile_optionsKeyword_0()); }
	'add_compile_options'
	{ after(grammarAccess.getAddCompileOptionsAccess().getAdd_compile_optionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCompileOptions__Group__1__Impl
	rule__AddCompileOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCompileOptionsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAddCompileOptionsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCompileOptions__Group__2__Impl
	rule__AddCompileOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAddCompileOptionsAccess().getGroup_2()); }
		(rule__AddCompileOptions__Group_2__0)
		{ after(grammarAccess.getAddCompileOptionsAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getAddCompileOptionsAccess().getGroup_2()); }
		(rule__AddCompileOptions__Group_2__0)*
		{ after(grammarAccess.getAddCompileOptionsAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCompileOptions__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCompileOptionsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getAddCompileOptionsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddCompileOptions__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCompileOptions__Group_2__0__Impl
	rule__AddCompileOptions__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCompileOptionsAccess().getHyphenMinusKeyword_2_0()); }
	'-'
	{ after(grammarAccess.getAddCompileOptionsAccess().getHyphenMinusKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddCompileOptions__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddCompileOptionsAccess().getOptionsAssignment_2_1()); }
	(rule__AddCompileOptions__OptionsAssignment_2_1)
	{ after(grammarAccess.getAddCompileOptionsAccess().getOptionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UndefinedInstruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndefinedInstruction__Group__0__Impl
	rule__UndefinedInstruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndefinedInstructionAccess().getNameAssignment_0()); }
	(rule__UndefinedInstruction__NameAssignment_0)
	{ after(grammarAccess.getUndefinedInstructionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndefinedInstruction__Group__1__Impl
	rule__UndefinedInstruction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndefinedInstructionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getUndefinedInstructionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndefinedInstruction__Group__2__Impl
	rule__UndefinedInstruction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndefinedInstructionAccess().getAlternatives_2()); }
	(rule__UndefinedInstruction__Alternatives_2)*
	{ after(grammarAccess.getUndefinedInstructionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UndefinedInstruction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUndefinedInstructionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getUndefinedInstructionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CMakeListsFile__InstructionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCMakeListsFileAccess().getInstructionsInstructionParserRuleCall_0()); }
		ruleInstruction
		{ after(grammarAccess.getCMakeListsFileAccess().getInstructionsInstructionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CMakeMinimumRequired__VersionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCMakeMinimumRequiredAccess().getVersionVERSION_TERMINALTerminalRuleCall_3_0()); }
		RULE_VERSION_TERMINAL
		{ after(grammarAccess.getCMakeMinimumRequiredAccess().getVersionVERSION_TERMINALTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProjectInstruction__DeclaredPackageNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectInstructionAccess().getDeclaredPackageNameDeclaredPackageNameCrossReference_3_0()); }
		(
			{ before(grammarAccess.getProjectInstructionAccess().getDeclaredPackageNameDeclaredPackageNameIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProjectInstructionAccess().getDeclaredPackageNameDeclaredPackageNameIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getProjectInstructionAccess().getDeclaredPackageNameDeclaredPackageNameCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPackageAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getFindPackageAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__RequiredAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPackageAccess().getRequiredREQUIREDKeyword_4_0()); }
		(
			{ before(grammarAccess.getFindPackageAccess().getRequiredREQUIREDKeyword_4_0()); }
			'REQUIRED'
			{ after(grammarAccess.getFindPackageAccess().getRequiredREQUIREDKeyword_4_0()); }
		)
		{ after(grammarAccess.getFindPackageAccess().getRequiredREQUIREDKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FindPackage__ComponentsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFindPackageAccess().getComponentsIDTerminalRuleCall_5_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFindPackageAccess().getComponentsIDTerminalRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExecutableAccess().getNameExecutableParserRuleCall_2_0()); }
		ruleExecutable
		{ after(grammarAccess.getAddExecutableAccess().getNameExecutableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExecutable__SourcesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExecutableAccess().getSourcesPathParserRuleCall_3_0()); }
		rulePath
		{ after(grammarAccess.getAddExecutableAccess().getSourcesPathParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Executable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExecutableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExecutableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAmentTargetDependenciesAccess().getNameExecutableCrossReference_2_0()); }
		(
			{ before(grammarAccess.getAmentTargetDependenciesAccess().getNameExecutableIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAmentTargetDependenciesAccess().getNameExecutableIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getAmentTargetDependenciesAccess().getNameExecutableCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AmentTargetDependencies__DependenciesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAmentTargetDependenciesAccess().getDependenciesPathParserRuleCall_3_0()); }
		rulePath
		{ after(grammarAccess.getAmentTargetDependenciesAccess().getDependenciesPathParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__TargetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstallTargetsAccess().getTargetsExecutableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getInstallTargetsAccess().getTargetsExecutableIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstallTargetsAccess().getTargetsExecutableIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getInstallTargetsAccess().getTargetsExecutableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__RuntimeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstallTargetsAccess().getRuntimeRUNTIMEKeyword_4_0()); }
		(
			{ before(grammarAccess.getInstallTargetsAccess().getRuntimeRUNTIMEKeyword_4_0()); }
			'RUNTIME'
			{ after(grammarAccess.getInstallTargetsAccess().getRuntimeRUNTIMEKeyword_4_0()); }
		)
		{ after(grammarAccess.getInstallTargetsAccess().getRuntimeRUNTIMEKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallTargets__DestinationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstallTargetsAccess().getDestinationPathParserRuleCall_6_0()); }
		rulePath
		{ after(grammarAccess.getInstallTargetsAccess().getDestinationPathParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__DirectoryAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstallDirectoryAccess().getDirectoryPathParserRuleCall_3_0()); }
		rulePath
		{ after(grammarAccess.getInstallDirectoryAccess().getDirectoryPathParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__DestinationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstallDirectoryAccess().getDestinationPathParserRuleCall_5_0()); }
		rulePath
		{ after(grammarAccess.getInstallDirectoryAccess().getDestinationPathParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstallDirectory__PatternsAssignment_6_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstallDirectoryAccess().getPatternsSTRINGTerminalRuleCall_6_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getInstallDirectoryAccess().getPatternsSTRINGTerminalRuleCall_6_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__PredicateAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfInstructionAccess().getPredicateANDKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getIfInstructionAccess().getPredicateANDKeyword_3_0_0()); }
			'AND'
			{ after(grammarAccess.getIfInstructionAccess().getPredicateANDKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getIfInstructionAccess().getPredicateANDKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfInstruction__InstructionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfInstructionAccess().getInstructionsInstructionParserRuleCall_5_0()); }
		ruleInstruction
		{ after(grammarAccess.getIfInstructionAccess().getInstructionsInstructionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetInstructionAccess().getVariableIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSetInstructionAccess().getVariableIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__ArgumentsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetInstructionAccess().getArgumentsAlternatives_3_0_0()); }
		(rule__SetInstruction__ArgumentsAlternatives_3_0_0)
		{ after(grammarAccess.getSetInstructionAccess().getArgumentsAlternatives_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetInstruction__ArgumentsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetInstructionAccess().getArgumentsINTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSetInstructionAccess().getArgumentsINTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddCompileOptions__OptionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddCompileOptionsAccess().getOptionsIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAddCompileOptionsAccess().getOptionsIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getUndefinedInstructionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsAlternatives_2_0_0()); }
		(rule__UndefinedInstruction__ArgumentsAlternatives_2_0_0)
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsAlternatives_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedInstruction__ArgumentsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUndefinedInstructionAccess().getArgumentsINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getUndefinedInstructionAccess().getArgumentsINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DECORATED_PACKAGE : RULE_ID '::' RULE_ID;

RULE_VERSION_TERMINAL : RULE_INT ('.' RULE_INT)+;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
