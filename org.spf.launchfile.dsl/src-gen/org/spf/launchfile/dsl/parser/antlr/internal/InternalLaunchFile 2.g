/*
 * generated by Xtext 2.21.0
 */
grammar InternalLaunchFile;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.spf.launchfile.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.spf.launchfile.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.spf.launchfile.dsl.services.LaunchFileGrammarAccess;

}

@parser::members {

 	private LaunchFileGrammarAccess grammarAccess;

    public InternalLaunchFileParser(TokenStream input, LaunchFileGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "PythonFile";
   	}

   	@Override
   	protected LaunchFileGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePythonFile
entryRulePythonFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPythonFileRule()); }
	iv_rulePythonFile=rulePythonFile
	{ $current=$iv_rulePythonFile.current; }
	EOF;

// Rule PythonFile
rulePythonFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPythonFileAccess().getInstructionsPythonInstructionParserRuleCall_0());
			}
			lv_instructions_0_0=rulePythonInstruction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPythonFileRule());
				}
				add(
					$current,
					"instructions",
					lv_instructions_0_0,
					"org.spf.launchfile.dsl.LaunchFile.PythonInstruction");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRulePythonInstruction
entryRulePythonInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPythonInstructionRule()); }
	iv_rulePythonInstruction=rulePythonInstruction
	{ $current=$iv_rulePythonInstruction.current; }
	EOF;

// Rule PythonInstruction
rulePythonInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPythonInstructionAccess().getImportStatementParserRuleCall_0());
		}
		this_ImportStatement_0=ruleImportStatement
		{
			$current = $this_ImportStatement_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPythonInstructionAccess().getFunctionParserRuleCall_1());
		}
		this_Function_1=ruleFunction
		{
			$current = $this_Function_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	iv_ruleImportStatement=ruleImportStatement
	{ $current=$iv_ruleImportStatement.current; }
	EOF;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='from'
			{
				newLeafNode(otherlv_0, grammarAccess.getImportStatementAccess().getFromKeyword_0_0());
			}
			(
				(
					(
						lv_from_1_1=RULE_ID
						{
							newLeafNode(lv_from_1_1, grammarAccess.getImportStatementAccess().getFromIDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportStatementRule());
							}
							setWithLastConsumed(
								$current,
								"from",
								lv_from_1_1,
								"org.eclipse.xtext.common.Terminals.ID");
						}
						    |
						{
							newCompositeNode(grammarAccess.getImportStatementAccess().getFromFromStringParserRuleCall_0_1_0_1());
						}
						lv_from_1_2=ruleFromString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportStatementRule());
							}
							set(
								$current,
								"from",
								lv_from_1_2,
								"org.spf.launchfile.dsl.LaunchFile.FromString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		otherlv_2='import'
		{
			newLeafNode(otherlv_2, grammarAccess.getImportStatementAccess().getImportKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportStatementAccess().getImportsFromStringParserRuleCall_2_0_0());
					}
					lv_imports_3_1=ruleFromString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportStatementRule());
						}
						add(
							$current,
							"imports",
							lv_imports_3_1,
							"org.spf.launchfile.dsl.LaunchFile.FromString");
						afterParserOrEnumRuleCall();
					}
					    |
					lv_imports_3_2='LaunchDescription'
					{
						newLeafNode(lv_imports_3_2, grammarAccess.getImportStatementAccess().getImportsLaunchDescriptionKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportStatementRule());
						}
						addWithLastConsumed($current, "imports", lv_imports_3_2, null);
					}
					    |
					lv_imports_3_3='Node'
					{
						newLeafNode(lv_imports_3_3, grammarAccess.getImportStatementAccess().getImportsNodeKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImportStatementRule());
						}
						addWithLastConsumed($current, "imports", lv_imports_3_3, null);
					}
				)
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getImportStatementAccess().getCommaKeyword_3_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImportStatementAccess().getImportsFromStringParserRuleCall_3_1_0_0());
						}
						lv_imports_5_1=ruleFromString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportStatementRule());
							}
							add(
								$current,
								"imports",
								lv_imports_5_1,
								"org.spf.launchfile.dsl.LaunchFile.FromString");
							afterParserOrEnumRuleCall();
						}
						    |
						lv_imports_5_2='LaunchDescription'
						{
							newLeafNode(lv_imports_5_2, grammarAccess.getImportStatementAccess().getImportsLaunchDescriptionKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportStatementRule());
							}
							addWithLastConsumed($current, "imports", lv_imports_5_2, null);
						}
						    |
						lv_imports_5_3='Node'
						{
							newLeafNode(lv_imports_5_3, grammarAccess.getImportStatementAccess().getImportsNodeKeyword_3_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImportStatementRule());
							}
							addWithLastConsumed($current, "imports", lv_imports_5_3, null);
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleFromString
entryRuleFromString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFromStringRule()); }
	iv_ruleFromString=ruleFromString
	{ $current=$iv_ruleFromString.current.getText(); }
	EOF;

// Rule FromString
ruleFromString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_DOTTED_PARAM_0=RULE_DOTTED_PARAM
	{
		$current.merge(this_DOTTED_PARAM_0);
	}
	{
		newLeafNode(this_DOTTED_PARAM_0, grammarAccess.getFromStringAccess().getDOTTED_PARAMTerminalRuleCall());
	}
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='def'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getDefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getBodyPythonInstructionParserRuleCall_5_0());
				}
				lv_body_5_0=rulePythonInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"body",
						lv_body_5_0,
						"org.spf.launchfile.dsl.LaunchFile.PythonInstruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getBodyReturnStatementParserRuleCall_6_0());
				}
				lv_body_6_0=ruleReturnStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					add(
						$current,
						"body",
						lv_body_6_0,
						"org.spf.launchfile.dsl.LaunchFile.ReturnStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnStatementAccess().getReturnKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getLaunchDescriptionLaunchDescriptionParserRuleCall_1_0());
				}
				lv_launchDescription_1_0=ruleLaunchDescription
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"launchDescription",
						lv_launchDescription_1_0,
						"org.spf.launchfile.dsl.LaunchFile.LaunchDescription");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLaunchDescription
entryRuleLaunchDescription returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLaunchDescriptionRule()); }
	iv_ruleLaunchDescription=ruleLaunchDescription
	{ $current=$iv_ruleLaunchDescription.current; }
	EOF;

// Rule LaunchDescription
ruleLaunchDescription returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLaunchDescriptionAccess().getLaunchDescriptionAction_0(),
					$current);
			}
		)
		otherlv_1='LaunchDescription'
		{
			newLeafNode(otherlv_1, grammarAccess.getLaunchDescriptionAccess().getLaunchDescriptionKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLaunchDescriptionAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getLaunchDescriptionAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLaunchDescriptionAccess().getNodesNodeParserRuleCall_4_0());
				}
				lv_nodes_4_0=ruleNode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLaunchDescriptionRule());
					}
					add(
						$current,
						"nodes",
						lv_nodes_4_0,
						"org.spf.launchfile.dsl.LaunchFile.Node");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getLaunchDescriptionAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLaunchDescriptionAccess().getNodesNodeParserRuleCall_5_1_0());
					}
					lv_nodes_6_0=ruleNode
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLaunchDescriptionRule());
						}
						add(
							$current,
							"nodes",
							lv_nodes_6_0,
							"org.spf.launchfile.dsl.LaunchFile.Node");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getLaunchDescriptionAccess().getCommaKeyword_6());
			}
		)?
		otherlv_8=']'
		{
			newLeafNode(otherlv_8, grammarAccess.getLaunchDescriptionAccess().getRightSquareBracketKeyword_7());
		}
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getLaunchDescriptionAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	iv_ruleNode=ruleNode
	{ $current=$iv_ruleNode.current; }
	EOF;

// Rule Node
ruleNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNodeAccess().getNodeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='Node'
			{
				newLeafNode(otherlv_1, grammarAccess.getNodeAccess().getNodeKeyword_1_0());
			}
			    |
			otherlv_2='launch_ros.actions.Node'
			{
				newLeafNode(otherlv_2, grammarAccess.getNodeAccess().getLaunch_rosActionsNodeKeyword_1_1());
			}
		)
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getNodeAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getNodeAccess().getUnorderedGroup_3());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 0);
					}
								({true}?=>(otherlv_5='node_name'
								{
									newLeafNode(otherlv_5, grammarAccess.getNodeAccess().getNode_nameKeyword_3_0_0());
								}
								otherlv_6='='
								{
									newLeafNode(otherlv_6, grammarAccess.getNodeAccess().getEqualsSignKeyword_3_0_1());
								}
								(
									(
										lv_node_name_7_0=RULE_STRING
										{
											newLeafNode(lv_node_name_7_0, grammarAccess.getNodeAccess().getNode_nameSTRINGTerminalRuleCall_3_0_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNodeRule());
											}
											setWithLastConsumed(
												$current,
												"node_name",
												lv_node_name_7_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 1);
					}
								({true}?=>(otherlv_8='package'
								{
									newLeafNode(otherlv_8, grammarAccess.getNodeAccess().getPackageKeyword_3_1_0());
								}
								otherlv_9='='
								{
									newLeafNode(otherlv_9, grammarAccess.getNodeAccess().getEqualsSignKeyword_3_1_1());
								}
								(
									(
										lv_package_name_10_0=RULE_STRING
										{
											newLeafNode(lv_package_name_10_0, grammarAccess.getNodeAccess().getPackage_nameSTRINGTerminalRuleCall_3_1_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNodeRule());
											}
											setWithLastConsumed(
												$current,
												"package_name",
												lv_package_name_10_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 2)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 2);
					}
								({true}?=>(otherlv_11='namespace'
								{
									newLeafNode(otherlv_11, grammarAccess.getNodeAccess().getNamespaceKeyword_3_2_0());
								}
								otherlv_12='='
								{
									newLeafNode(otherlv_12, grammarAccess.getNodeAccess().getEqualsSignKeyword_3_2_1());
								}
								(
									(
										lv_namespace_13_0=RULE_STRING
										{
											newLeafNode(lv_namespace_13_0, grammarAccess.getNodeAccess().getNamespaceSTRINGTerminalRuleCall_3_2_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNodeRule());
											}
											setWithLastConsumed(
												$current,
												"namespace",
												lv_namespace_13_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 3)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 3);
					}
								({true}?=>(otherlv_14='node_executable'
								{
									newLeafNode(otherlv_14, grammarAccess.getNodeAccess().getNode_executableKeyword_3_3_0());
								}
								otherlv_15='='
								{
									newLeafNode(otherlv_15, grammarAccess.getNodeAccess().getEqualsSignKeyword_3_3_1());
								}
								(
									(
										lv_node_executable_16_0=RULE_STRING
										{
											newLeafNode(lv_node_executable_16_0, grammarAccess.getNodeAccess().getNode_executableSTRINGTerminalRuleCall_3_3_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNodeRule());
											}
											setWithLastConsumed(
												$current,
												"node_executable",
												lv_node_executable_16_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 4)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 4);
					}
								({true}?=>(otherlv_17='output'
								{
									newLeafNode(otherlv_17, grammarAccess.getNodeAccess().getOutputKeyword_3_4_0());
								}
								otherlv_18='='
								{
									newLeafNode(otherlv_18, grammarAccess.getNodeAccess().getEqualsSignKeyword_3_4_1());
								}
								(
									(
										lv_output_19_0=RULE_STRING
										{
											newLeafNode(lv_output_19_0, grammarAccess.getNodeAccess().getOutputSTRINGTerminalRuleCall_3_4_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getNodeRule());
											}
											setWithLastConsumed(
												$current,
												"output",
												lv_output_19_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 5)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 5);
					}
								({true}?=>(otherlv_20='parameters'
								{
									newLeafNode(otherlv_20, grammarAccess.getNodeAccess().getParametersKeyword_3_5_0());
								}
								otherlv_21='='
								{
									newLeafNode(otherlv_21, grammarAccess.getNodeAccess().getEqualsSignKeyword_3_5_1());
								}
								otherlv_22='[{'
								{
									newLeafNode(otherlv_22, grammarAccess.getNodeAccess().getLeftSquareBracketLeftCurlyBracketKeyword_3_5_2());
								}
								(
									(
										{
											newCompositeNode(grammarAccess.getNodeAccess().getParametersParameterParserRuleCall_3_5_3_0());
										}
										lv_parameters_23_0=ruleParameter
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getNodeRule());
											}
											add(
												$current,
												"parameters",
												lv_parameters_23_0,
												"org.spf.launchfile.dsl.LaunchFile.Parameter");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_24=','
									{
										newLeafNode(otherlv_24, grammarAccess.getNodeAccess().getCommaKeyword_3_5_4_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getNodeAccess().getParametersParameterParserRuleCall_3_5_4_1_0());
											}
											lv_parameters_25_0=ruleParameter
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getNodeRule());
												}
												add(
													$current,
													"parameters",
													lv_parameters_25_0,
													"org.spf.launchfile.dsl.LaunchFile.Parameter");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
								otherlv_26='}]'
								{
									newLeafNode(otherlv_26, grammarAccess.getNodeAccess().getRightCurlyBracketRightSquareBracketKeyword_3_5_5());
								}
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getNodeAccess().getUnorderedGroup_3())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getNodeAccess().getUnorderedGroup_3());
				}
		)?
		otherlv_27=')'
		{
			newLeafNode(otherlv_27, grammarAccess.getNodeAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_DOTTED_PARAM : RULE_ID ('.' RULE_ID)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
