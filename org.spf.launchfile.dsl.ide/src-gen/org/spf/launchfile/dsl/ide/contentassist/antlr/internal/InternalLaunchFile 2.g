/*
 * generated by Xtext 2.21.0
 */
grammar InternalLaunchFile;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.spf.launchfile.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.spf.launchfile.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.spf.launchfile.dsl.services.LaunchFileGrammarAccess;

}
@parser::members {
	private LaunchFileGrammarAccess grammarAccess;

	public void setGrammarAccess(LaunchFileGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulePythonFile
entryRulePythonFile
:
{ before(grammarAccess.getPythonFileRule()); }
	 rulePythonFile
{ after(grammarAccess.getPythonFileRule()); } 
	 EOF 
;

// Rule PythonFile
rulePythonFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPythonFileAccess().getInstructionsAssignment()); }
		(rule__PythonFile__InstructionsAssignment)*
		{ after(grammarAccess.getPythonFileAccess().getInstructionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePythonInstruction
entryRulePythonInstruction
:
{ before(grammarAccess.getPythonInstructionRule()); }
	 rulePythonInstruction
{ after(grammarAccess.getPythonInstructionRule()); } 
	 EOF 
;

// Rule PythonInstruction
rulePythonInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPythonInstructionAccess().getAlternatives()); }
		(rule__PythonInstruction__Alternatives)
		{ after(grammarAccess.getPythonInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportStatement
entryRuleImportStatement
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportStatementAccess().getGroup()); }
		(rule__ImportStatement__Group__0)
		{ after(grammarAccess.getImportStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFromString
entryRuleFromString
:
{ before(grammarAccess.getFromStringRule()); }
	 ruleFromString
{ after(grammarAccess.getFromStringRule()); } 
	 EOF 
;

// Rule FromString
ruleFromString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFromStringAccess().getDOTTED_PARAMTerminalRuleCall()); }
		RULE_DOTTED_PARAM
		{ after(grammarAccess.getFromStringAccess().getDOTTED_PARAMTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLaunchDescription
entryRuleLaunchDescription
:
{ before(grammarAccess.getLaunchDescriptionRule()); }
	 ruleLaunchDescription
{ after(grammarAccess.getLaunchDescriptionRule()); } 
	 EOF 
;

// Rule LaunchDescription
ruleLaunchDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLaunchDescriptionAccess().getGroup()); }
		(rule__LaunchDescription__Group__0)
		{ after(grammarAccess.getLaunchDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNode
entryRuleNode
:
{ before(grammarAccess.getNodeRule()); }
	 ruleNode
{ after(grammarAccess.getNodeRule()); } 
	 EOF 
;

// Rule Node
ruleNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeAccess().getGroup()); }
		(rule__Node__Group__0)
		{ after(grammarAccess.getNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PythonInstruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPythonInstructionAccess().getImportStatementParserRuleCall_0()); }
		ruleImportStatement
		{ after(grammarAccess.getPythonInstructionAccess().getImportStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPythonInstructionAccess().getFunctionParserRuleCall_1()); }
		ruleFunction
		{ after(grammarAccess.getPythonInstructionAccess().getFunctionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__FromAlternatives_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getFromIDTerminalRuleCall_0_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getImportStatementAccess().getFromIDTerminalRuleCall_0_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportStatementAccess().getFromFromStringParserRuleCall_0_1_0_1()); }
		ruleFromString
		{ after(grammarAccess.getImportStatementAccess().getFromFromStringParserRuleCall_0_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportsAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsFromStringParserRuleCall_2_0_0()); }
		ruleFromString
		{ after(grammarAccess.getImportStatementAccess().getImportsFromStringParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsLaunchDescriptionKeyword_2_0_1()); }
		'LaunchDescription'
		{ after(grammarAccess.getImportStatementAccess().getImportsLaunchDescriptionKeyword_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsNodeKeyword_2_0_2()); }
		'Node'
		{ after(grammarAccess.getImportStatementAccess().getImportsNodeKeyword_2_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportsAlternatives_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsFromStringParserRuleCall_3_1_0_0()); }
		ruleFromString
		{ after(grammarAccess.getImportStatementAccess().getImportsFromStringParserRuleCall_3_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsLaunchDescriptionKeyword_3_1_0_1()); }
		'LaunchDescription'
		{ after(grammarAccess.getImportStatementAccess().getImportsLaunchDescriptionKeyword_3_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsNodeKeyword_3_1_0_2()); }
		'Node'
		{ after(grammarAccess.getImportStatementAccess().getImportsNodeKeyword_3_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNodeKeyword_1_0()); }
		'Node'
		{ after(grammarAccess.getNodeAccess().getNodeKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeAccess().getLaunch_rosActionsNodeKeyword_1_1()); }
		'launch_ros.actions.Node'
		{ after(grammarAccess.getNodeAccess().getLaunch_rosActionsNodeKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getGroup_0()); }
	(rule__ImportStatement__Group_0__0)?
	{ after(grammarAccess.getImportStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__1__Impl
	rule__ImportStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getImportKeyword_1()); }
	'import'
	{ after(grammarAccess.getImportStatementAccess().getImportKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__2__Impl
	rule__ImportStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getImportsAssignment_2()); }
	(rule__ImportStatement__ImportsAssignment_2)
	{ after(grammarAccess.getImportStatementAccess().getImportsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getGroup_3()); }
	(rule__ImportStatement__Group_3__0)*
	{ after(grammarAccess.getImportStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group_0__0__Impl
	rule__ImportStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getFromKeyword_0_0()); }
	'from'
	{ after(grammarAccess.getImportStatementAccess().getFromKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getFromAssignment_0_1()); }
	(rule__ImportStatement__FromAssignment_0_1)
	{ after(grammarAccess.getImportStatementAccess().getFromAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group_3__0__Impl
	rule__ImportStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getImportStatementAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getImportsAssignment_3_1()); }
	(rule__ImportStatement__ImportsAssignment_3_1)
	{ after(grammarAccess.getImportStatementAccess().getImportsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getFunctionAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getBodyAssignment_5()); }
	(rule__Function__BodyAssignment_5)*
	{ after(grammarAccess.getFunctionAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getBodyAssignment_6()); }
	(rule__Function__BodyAssignment_6)?
	{ after(grammarAccess.getFunctionAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getLaunchDescriptionAssignment_1()); }
	(rule__ReturnStatement__LaunchDescriptionAssignment_1)
	{ after(grammarAccess.getReturnStatementAccess().getLaunchDescriptionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LaunchDescription__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__0__Impl
	rule__LaunchDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getLaunchDescriptionAction_0()); }
	()
	{ after(grammarAccess.getLaunchDescriptionAccess().getLaunchDescriptionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__1__Impl
	rule__LaunchDescription__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getLaunchDescriptionKeyword_1()); }
	'LaunchDescription'
	{ after(grammarAccess.getLaunchDescriptionAccess().getLaunchDescriptionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__2__Impl
	rule__LaunchDescription__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getLaunchDescriptionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__3__Impl
	rule__LaunchDescription__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getLeftSquareBracketKeyword_3()); }
	'['
	{ after(grammarAccess.getLaunchDescriptionAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__4__Impl
	rule__LaunchDescription__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getNodesAssignment_4()); }
	(rule__LaunchDescription__NodesAssignment_4)
	{ after(grammarAccess.getLaunchDescriptionAccess().getNodesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__5__Impl
	rule__LaunchDescription__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getGroup_5()); }
	(rule__LaunchDescription__Group_5__0)*
	{ after(grammarAccess.getLaunchDescriptionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__6__Impl
	rule__LaunchDescription__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getCommaKeyword_6()); }
	(',')?
	{ after(grammarAccess.getLaunchDescriptionAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__7__Impl
	rule__LaunchDescription__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getRightSquareBracketKeyword_7()); }
	']'
	{ after(grammarAccess.getLaunchDescriptionAccess().getRightSquareBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getRightParenthesisKeyword_8()); }
	')'
	{ after(grammarAccess.getLaunchDescriptionAccess().getRightParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LaunchDescription__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group_5__0__Impl
	rule__LaunchDescription__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getLaunchDescriptionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaunchDescription__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaunchDescriptionAccess().getNodesAssignment_5_1()); }
	(rule__LaunchDescription__NodesAssignment_5_1)
	{ after(grammarAccess.getLaunchDescriptionAccess().getNodesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__0__Impl
	rule__Node__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNodeAction_0()); }
	()
	{ after(grammarAccess.getNodeAccess().getNodeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__1__Impl
	rule__Node__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getAlternatives_1()); }
	(rule__Node__Alternatives_1)
	{ after(grammarAccess.getNodeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__2__Impl
	rule__Node__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getNodeAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__3__Impl
	rule__Node__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getUnorderedGroup_3()); }
	(rule__Node__UnorderedGroup_3)?
	{ after(grammarAccess.getNodeAccess().getUnorderedGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getNodeAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_0__0__Impl
	rule__Node__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNode_nameKeyword_3_0_0()); }
	'node_name'
	{ after(grammarAccess.getNodeAccess().getNode_nameKeyword_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_0__1__Impl
	rule__Node__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_0_1()); }
	'='
	{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNode_nameAssignment_3_0_2()); }
	(rule__Node__Node_nameAssignment_3_0_2)
	{ after(grammarAccess.getNodeAccess().getNode_nameAssignment_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_1__0__Impl
	rule__Node__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getPackageKeyword_3_1_0()); }
	'package'
	{ after(grammarAccess.getNodeAccess().getPackageKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_1__1__Impl
	rule__Node__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_1_1()); }
	'='
	{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getPackage_nameAssignment_3_1_2()); }
	(rule__Node__Package_nameAssignment_3_1_2)
	{ after(grammarAccess.getNodeAccess().getPackage_nameAssignment_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_2__0__Impl
	rule__Node__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNamespaceKeyword_3_2_0()); }
	'namespace'
	{ after(grammarAccess.getNodeAccess().getNamespaceKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_2__1__Impl
	rule__Node__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_2_1()); }
	'='
	{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNamespaceAssignment_3_2_2()); }
	(rule__Node__NamespaceAssignment_3_2_2)
	{ after(grammarAccess.getNodeAccess().getNamespaceAssignment_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_3__0__Impl
	rule__Node__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNode_executableKeyword_3_3_0()); }
	'node_executable'
	{ after(grammarAccess.getNodeAccess().getNode_executableKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_3__1__Impl
	rule__Node__Group_3_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_3_1()); }
	'='
	{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getNode_executableAssignment_3_3_2()); }
	(rule__Node__Node_executableAssignment_3_3_2)
	{ after(grammarAccess.getNodeAccess().getNode_executableAssignment_3_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_4__0__Impl
	rule__Node__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getOutputKeyword_3_4_0()); }
	'output'
	{ after(grammarAccess.getNodeAccess().getOutputKeyword_3_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_4__1__Impl
	rule__Node__Group_3_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_4_1()); }
	'='
	{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getOutputAssignment_3_4_2()); }
	(rule__Node__OutputAssignment_3_4_2)
	{ after(grammarAccess.getNodeAccess().getOutputAssignment_3_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5__0__Impl
	rule__Node__Group_3_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getParametersKeyword_3_5_0()); }
	'parameters'
	{ after(grammarAccess.getNodeAccess().getParametersKeyword_3_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5__1__Impl
	rule__Node__Group_3_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_5_1()); }
	'='
	{ after(grammarAccess.getNodeAccess().getEqualsSignKeyword_3_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5__2__Impl
	rule__Node__Group_3_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getLeftSquareBracketLeftCurlyBracketKeyword_3_5_2()); }
	'[{'
	{ after(grammarAccess.getNodeAccess().getLeftSquareBracketLeftCurlyBracketKeyword_3_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5__3__Impl
	rule__Node__Group_3_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getParametersAssignment_3_5_3()); }
	(rule__Node__ParametersAssignment_3_5_3)
	{ after(grammarAccess.getNodeAccess().getParametersAssignment_3_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5__4__Impl
	rule__Node__Group_3_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getGroup_3_5_4()); }
	(rule__Node__Group_3_5_4__0)*
	{ after(grammarAccess.getNodeAccess().getGroup_3_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getRightCurlyBracketRightSquareBracketKeyword_3_5_5()); }
	'}]'
	{ after(grammarAccess.getNodeAccess().getRightCurlyBracketRightSquareBracketKeyword_3_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__Group_3_5_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5_4__0__Impl
	rule__Node__Group_3_5_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getCommaKeyword_3_5_4_0()); }
	','
	{ after(grammarAccess.getNodeAccess().getCommaKeyword_3_5_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__Group_3_5_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Group_3_5_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeAccess().getParametersAssignment_3_5_4_1()); }
	(rule__Node__ParametersAssignment_3_5_4_1)
	{ after(grammarAccess.getNodeAccess().getParametersAssignment_3_5_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValueAssignment_2()); }
	(rule__Parameter__ValueAssignment_2)
	{ after(grammarAccess.getParameterAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Node__UnorderedGroup_3
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getNodeAccess().getUnorderedGroup_3());
	}
:
	rule__Node__UnorderedGroup_3__0
	{getUnorderedGroupHelper().canLeave(grammarAccess.getNodeAccess().getUnorderedGroup_3())}?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getNodeAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getNodeAccess().getGroup_3_0()); }
					(rule__Node__Group_3_0__0)
					{ after(grammarAccess.getNodeAccess().getGroup_3_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 1);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getNodeAccess().getGroup_3_1()); }
					(rule__Node__Group_3_1__0)
					{ after(grammarAccess.getNodeAccess().getGroup_3_1()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 2);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getNodeAccess().getGroup_3_2()); }
					(rule__Node__Group_3_2__0)
					{ after(grammarAccess.getNodeAccess().getGroup_3_2()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 3);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getNodeAccess().getGroup_3_3()); }
					(rule__Node__Group_3_3__0)
					{ after(grammarAccess.getNodeAccess().getGroup_3_3()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 4);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getNodeAccess().getGroup_3_4()); }
					(rule__Node__Group_3_4__0)
					{ after(grammarAccess.getNodeAccess().getGroup_3_4()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 5)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getNodeAccess().getUnorderedGroup_3(), 5);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getNodeAccess().getGroup_3_5()); }
					(rule__Node__Group_3_5__0)
					{ after(grammarAccess.getNodeAccess().getGroup_3_5()); }
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNodeAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__UnorderedGroup_3__Impl
	rule__Node__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__UnorderedGroup_3__Impl
	rule__Node__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__UnorderedGroup_3__Impl
	rule__Node__UnorderedGroup_3__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__UnorderedGroup_3__Impl
	rule__Node__UnorderedGroup_3__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__UnorderedGroup_3__Impl
	rule__Node__UnorderedGroup_3__5?
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__UnorderedGroup_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Node__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__PythonFile__InstructionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPythonFileAccess().getInstructionsPythonInstructionParserRuleCall_0()); }
		rulePythonInstruction
		{ after(grammarAccess.getPythonFileAccess().getInstructionsPythonInstructionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__FromAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getFromAlternatives_0_1_0()); }
		(rule__ImportStatement__FromAlternatives_0_1_0)
		{ after(grammarAccess.getImportStatementAccess().getFromAlternatives_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsAlternatives_2_0()); }
		(rule__ImportStatement__ImportsAlternatives_2_0)
		{ after(grammarAccess.getImportStatementAccess().getImportsAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getImportsAlternatives_3_1_0()); }
		(rule__ImportStatement__ImportsAlternatives_3_1_0)
		{ after(grammarAccess.getImportStatementAccess().getImportsAlternatives_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getBodyPythonInstructionParserRuleCall_5_0()); }
		rulePythonInstruction
		{ after(grammarAccess.getFunctionAccess().getBodyPythonInstructionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getBodyReturnStatementParserRuleCall_6_0()); }
		ruleReturnStatement
		{ after(grammarAccess.getFunctionAccess().getBodyReturnStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__LaunchDescriptionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getLaunchDescriptionLaunchDescriptionParserRuleCall_1_0()); }
		ruleLaunchDescription
		{ after(grammarAccess.getReturnStatementAccess().getLaunchDescriptionLaunchDescriptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__NodesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLaunchDescriptionAccess().getNodesNodeParserRuleCall_4_0()); }
		ruleNode
		{ after(grammarAccess.getLaunchDescriptionAccess().getNodesNodeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaunchDescription__NodesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLaunchDescriptionAccess().getNodesNodeParserRuleCall_5_1_0()); }
		ruleNode
		{ after(grammarAccess.getLaunchDescriptionAccess().getNodesNodeParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Node_nameAssignment_3_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNode_nameSTRINGTerminalRuleCall_3_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNode_nameSTRINGTerminalRuleCall_3_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Package_nameAssignment_3_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getPackage_nameSTRINGTerminalRuleCall_3_1_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getPackage_nameSTRINGTerminalRuleCall_3_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__NamespaceAssignment_3_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNamespaceSTRINGTerminalRuleCall_3_2_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNamespaceSTRINGTerminalRuleCall_3_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__Node_executableAssignment_3_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getNode_executableSTRINGTerminalRuleCall_3_3_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getNode_executableSTRINGTerminalRuleCall_3_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__OutputAssignment_3_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getOutputSTRINGTerminalRuleCall_3_4_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getNodeAccess().getOutputSTRINGTerminalRuleCall_3_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ParametersAssignment_3_5_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getParametersParameterParserRuleCall_3_5_3_0()); }
		ruleParameter
		{ after(grammarAccess.getNodeAccess().getParametersParameterParserRuleCall_3_5_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Node__ParametersAssignment_3_5_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeAccess().getParametersParameterParserRuleCall_3_5_4_1_0()); }
		ruleParameter
		{ after(grammarAccess.getNodeAccess().getParametersParameterParserRuleCall_3_5_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getNameSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOTTED_PARAM : RULE_ID ('.' RULE_ID)+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
