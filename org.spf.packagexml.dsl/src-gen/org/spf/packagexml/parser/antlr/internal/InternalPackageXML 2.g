/*
 * generated by Xtext 2.22.0
 */
grammar InternalPackageXML;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.spf.packagexml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.spf.packagexml.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.spf.packagexml.services.PackageXMLGrammarAccess;

}

@parser::members {

 	private PackageXMLGrammarAccess grammarAccess;

    public InternalPackageXMLParser(TokenStream input, PackageXMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Package";
   	}

   	@Override
   	protected PackageXMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	iv_rulePackage=rulePackage
	{ $current=$iv_rulePackage.current; }
	EOF;

// Rule Package
rulePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<?'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageAccess().getLessThanSignQuestionMarkKeyword_0());
		}
		otherlv_1='xml'
		{
			newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getXmlKeyword_1());
		}
		otherlv_2='version'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageAccess().getVersionKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_version_4_0=RULE_STRING
				{
					newLeafNode(lv_version_4_0, grammarAccess.getPackageAccess().getVersionSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageRule());
					}
					setWithLastConsumed(
						$current,
						"version",
						lv_version_4_0,
						"org.spf.packagexml.PackageXML.STRING");
				}
			)
		)
		otherlv_5='?>'
		{
			newLeafNode(otherlv_5, grammarAccess.getPackageAccess().getQuestionMarkGreaterThanSignKeyword_5());
		}
		otherlv_6='<'
		{
			newLeafNode(otherlv_6, grammarAccess.getPackageAccess().getLessThanSignKeyword_6());
		}
		otherlv_7='package'
		{
			newLeafNode(otherlv_7, grammarAccess.getPackageAccess().getPackageKeyword_7());
		}
		otherlv_8='format'
		{
			newLeafNode(otherlv_8, grammarAccess.getPackageAccess().getFormatKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getPackageAccess().getEqualsSignKeyword_9());
		}
		(
			(
				lv_format_10_0=RULE_STRING
				{
					newLeafNode(lv_format_10_0, grammarAccess.getPackageAccess().getFormatSTRINGTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPackageRule());
					}
					setWithLastConsumed(
						$current,
						"format",
						lv_format_10_0,
						"org.spf.packagexml.PackageXML.STRING");
				}
			)
		)
		otherlv_11='>'
		{
			newLeafNode(otherlv_11, grammarAccess.getPackageAccess().getGreaterThanSignKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageAccess().getTagsTagParserRuleCall_12_0());
				}
				lv_tags_12_0=ruleTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageRule());
					}
					add(
						$current,
						"tags",
						lv_tags_12_0,
						"org.spf.packagexml.PackageXML.Tag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_13='<'
		{
			newLeafNode(otherlv_13, grammarAccess.getPackageAccess().getLessThanSignKeyword_13());
		}
		otherlv_14='/'
		{
			newLeafNode(otherlv_14, grammarAccess.getPackageAccess().getSolidusKeyword_14());
		}
		otherlv_15='package'
		{
			newLeafNode(otherlv_15, grammarAccess.getPackageAccess().getPackageKeyword_15());
		}
		otherlv_16='>'
		{
			newLeafNode(otherlv_16, grammarAccess.getPackageAccess().getGreaterThanSignKeyword_16());
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTagAccess().getNameTagParserRuleCall_0());
		}
		this_NameTag_0=ruleNameTag
		{
			$current = $this_NameTag_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getVersionTagParserRuleCall_1());
		}
		this_VersionTag_1=ruleVersionTag
		{
			$current = $this_VersionTag_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getDescriptionTagParserRuleCall_2());
		}
		this_DescriptionTag_2=ruleDescriptionTag
		{
			$current = $this_DescriptionTag_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getMaintainerTagParserRuleCall_3());
		}
		this_MaintainerTag_3=ruleMaintainerTag
		{
			$current = $this_MaintainerTag_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getLicenseTagParserRuleCall_4());
		}
		this_LicenseTag_4=ruleLicenseTag
		{
			$current = $this_LicenseTag_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getDependencyTagParserRuleCall_5());
		}
		this_DependencyTag_5=ruleDependencyTag
		{
			$current = $this_DependencyTag_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getExportTagParserRuleCall_6());
		}
		this_ExportTag_6=ruleExportTag
		{
			$current = $this_ExportTag_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getAuthorTagParserRuleCall_7());
		}
		this_AuthorTag_7=ruleAuthorTag
		{
			$current = $this_AuthorTag_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getUrlTagParserRuleCall_8());
		}
		this_UrlTag_8=ruleUrlTag
		{
			$current = $this_UrlTag_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTagAccess().getArbitraryTagParserRuleCall_9());
		}
		this_ArbitraryTag_9=ruleArbitraryTag
		{
			$current = $this_ArbitraryTag_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNameTag
entryRuleNameTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameTagRule()); }
	iv_ruleNameTag=ruleNameTag
	{ $current=$iv_ruleNameTag.current; }
	EOF;

// Rule NameTag
ruleNameTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getNameTagAccess().getLessThanSignKeyword_0());
		}
		otherlv_1='name'
		{
			newLeafNode(otherlv_1, grammarAccess.getNameTagAccess().getNameKeyword_1());
		}
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getNameTagAccess().getGreaterThanSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNameTagAccess().getDeclaredPackageNameDeclaredPackageNameParserRuleCall_3_0());
				}
				lv_declaredPackageName_3_0=ruleDeclaredPackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameTagRule());
					}
					set(
						$current,
						"declaredPackageName",
						lv_declaredPackageName_3_0,
						"org.spf.packagexml.PackageXML.DeclaredPackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='<'
		{
			newLeafNode(otherlv_4, grammarAccess.getNameTagAccess().getLessThanSignKeyword_4());
		}
		otherlv_5='/'
		{
			newLeafNode(otherlv_5, grammarAccess.getNameTagAccess().getSolidusKeyword_5());
		}
		otherlv_6='name'
		{
			newLeafNode(otherlv_6, grammarAccess.getNameTagAccess().getNameKeyword_6());
		}
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getNameTagAccess().getGreaterThanSignKeyword_7());
		}
	)
;

// Entry rule entryRuleDeclaredPackageName
entryRuleDeclaredPackageName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclaredPackageNameRule()); }
	iv_ruleDeclaredPackageName=ruleDeclaredPackageName
	{ $current=$iv_ruleDeclaredPackageName.current; }
	EOF;

// Rule DeclaredPackageName
ruleDeclaredPackageName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDeclaredPackageNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDeclaredPackageNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.spf.packagexml.PackageXML.ID");
			}
		)
	)
;

// Entry rule entryRuleVersionTag
entryRuleVersionTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVersionTagRule()); }
	iv_ruleVersionTag=ruleVersionTag
	{ $current=$iv_ruleVersionTag.current; }
	EOF;

// Rule VersionTag
ruleVersionTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getVersionTagAccess().getLessThanSignKeyword_0());
		}
		otherlv_1='version'
		{
			newLeafNode(otherlv_1, grammarAccess.getVersionTagAccess().getVersionKeyword_1());
		}
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getVersionTagAccess().getGreaterThanSignKeyword_2());
		}
		(
			(
				lv_version_3_0=RULE_VERSION_TERMINAL
				{
					newLeafNode(lv_version_3_0, grammarAccess.getVersionTagAccess().getVersionVERSION_TERMINALTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVersionTagRule());
					}
					setWithLastConsumed(
						$current,
						"version",
						lv_version_3_0,
						"org.spf.packagexml.PackageXML.VERSION_TERMINAL");
				}
			)
		)
		otherlv_4='<'
		{
			newLeafNode(otherlv_4, grammarAccess.getVersionTagAccess().getLessThanSignKeyword_4());
		}
		otherlv_5='/'
		{
			newLeafNode(otherlv_5, grammarAccess.getVersionTagAccess().getSolidusKeyword_5());
		}
		otherlv_6='version'
		{
			newLeafNode(otherlv_6, grammarAccess.getVersionTagAccess().getVersionKeyword_6());
		}
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getVersionTagAccess().getGreaterThanSignKeyword_7());
		}
	)
;

// Entry rule entryRuleDescriptionTag
entryRuleDescriptionTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDescriptionTagRule()); }
	iv_ruleDescriptionTag=ruleDescriptionTag
	{ $current=$iv_ruleDescriptionTag.current; }
	EOF;

// Rule DescriptionTag
ruleDescriptionTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDescriptionTagAccess().getDescriptionTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getDescriptionTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='description'
		{
			newLeafNode(otherlv_2, grammarAccess.getDescriptionTagAccess().getDescriptionKeyword_2());
		}
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getDescriptionTagAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				(
					lv_descriptionText_4_1=RULE_ID
					{
						newLeafNode(lv_descriptionText_4_1, grammarAccess.getDescriptionTagAccess().getDescriptionTextIDTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDescriptionTagRule());
						}
						addWithLastConsumed(
							$current,
							"descriptionText",
							lv_descriptionText_4_1,
							"org.spf.packagexml.PackageXML.ID");
					}
					    |
					lv_descriptionText_4_2=RULE_STRING
					{
						newLeafNode(lv_descriptionText_4_2, grammarAccess.getDescriptionTagAccess().getDescriptionTextSTRINGTerminalRuleCall_4_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDescriptionTagRule());
						}
						addWithLastConsumed(
							$current,
							"descriptionText",
							lv_descriptionText_4_2,
							"org.spf.packagexml.PackageXML.STRING");
					}
				)
			)
		)*
		otherlv_5='<'
		{
			newLeafNode(otherlv_5, grammarAccess.getDescriptionTagAccess().getLessThanSignKeyword_5());
		}
		otherlv_6='/'
		{
			newLeafNode(otherlv_6, grammarAccess.getDescriptionTagAccess().getSolidusKeyword_6());
		}
		otherlv_7='description'
		{
			newLeafNode(otherlv_7, grammarAccess.getDescriptionTagAccess().getDescriptionKeyword_7());
		}
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getDescriptionTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleMaintainerTag
entryRuleMaintainerTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaintainerTagRule()); }
	iv_ruleMaintainerTag=ruleMaintainerTag
	{ $current=$iv_ruleMaintainerTag.current; }
	EOF;

// Rule MaintainerTag
ruleMaintainerTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaintainerTagAccess().getLessThanSignKeyword_0());
		}
		otherlv_1='maintainer'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaintainerTagAccess().getMaintainerKeyword_1());
		}
		otherlv_2='email'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaintainerTagAccess().getEmailKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getMaintainerTagAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_email_4_0=RULE_STRING
				{
					newLeafNode(lv_email_4_0, grammarAccess.getMaintainerTagAccess().getEmailSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMaintainerTagRule());
					}
					setWithLastConsumed(
						$current,
						"email",
						lv_email_4_0,
						"org.spf.packagexml.PackageXML.STRING");
				}
			)
		)
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getMaintainerTagAccess().getGreaterThanSignKeyword_5());
		}
		(
			(
				(
					lv_maintainerText_6_1=RULE_ID
					{
						newLeafNode(lv_maintainerText_6_1, grammarAccess.getMaintainerTagAccess().getMaintainerTextIDTerminalRuleCall_6_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaintainerTagRule());
						}
						addWithLastConsumed(
							$current,
							"maintainerText",
							lv_maintainerText_6_1,
							"org.spf.packagexml.PackageXML.ID");
					}
					    |
					lv_maintainerText_6_2=RULE_STRING
					{
						newLeafNode(lv_maintainerText_6_2, grammarAccess.getMaintainerTagAccess().getMaintainerTextSTRINGTerminalRuleCall_6_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMaintainerTagRule());
						}
						addWithLastConsumed(
							$current,
							"maintainerText",
							lv_maintainerText_6_2,
							"org.spf.packagexml.PackageXML.STRING");
					}
				)
			)
		)*
		otherlv_7='<'
		{
			newLeafNode(otherlv_7, grammarAccess.getMaintainerTagAccess().getLessThanSignKeyword_7());
		}
		otherlv_8='/'
		{
			newLeafNode(otherlv_8, grammarAccess.getMaintainerTagAccess().getSolidusKeyword_8());
		}
		otherlv_9='maintainer'
		{
			newLeafNode(otherlv_9, grammarAccess.getMaintainerTagAccess().getMaintainerKeyword_9());
		}
		otherlv_10='>'
		{
			newLeafNode(otherlv_10, grammarAccess.getMaintainerTagAccess().getGreaterThanSignKeyword_10());
		}
	)
;

// Entry rule entryRuleLicenseTag
entryRuleLicenseTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLicenseTagRule()); }
	iv_ruleLicenseTag=ruleLicenseTag
	{ $current=$iv_ruleLicenseTag.current; }
	EOF;

// Rule LicenseTag
ruleLicenseTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getLicenseTagAccess().getLessThanSignKeyword_0());
		}
		otherlv_1='license'
		{
			newLeafNode(otherlv_1, grammarAccess.getLicenseTagAccess().getLicenseKeyword_1());
		}
		otherlv_2='>'
		{
			newLeafNode(otherlv_2, grammarAccess.getLicenseTagAccess().getGreaterThanSignKeyword_2());
		}
		(
			(
				lv_license_3_0=RULE_ID
				{
					newLeafNode(lv_license_3_0, grammarAccess.getLicenseTagAccess().getLicenseIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLicenseTagRule());
					}
					setWithLastConsumed(
						$current,
						"license",
						lv_license_3_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_4='<'
		{
			newLeafNode(otherlv_4, grammarAccess.getLicenseTagAccess().getLessThanSignKeyword_4());
		}
		otherlv_5='/'
		{
			newLeafNode(otherlv_5, grammarAccess.getLicenseTagAccess().getSolidusKeyword_5());
		}
		otherlv_6='license'
		{
			newLeafNode(otherlv_6, grammarAccess.getLicenseTagAccess().getLicenseKeyword_6());
		}
		otherlv_7='>'
		{
			newLeafNode(otherlv_7, grammarAccess.getLicenseTagAccess().getGreaterThanSignKeyword_7());
		}
	)
;

// Entry rule entryRuleDependencyTag
entryRuleDependencyTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDependencyTagRule()); }
	iv_ruleDependencyTag=ruleDependencyTag
	{ $current=$iv_ruleDependencyTag.current; }
	EOF;

// Rule DependencyTag
ruleDependencyTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDependencyTagAccess().getBuildDependDependencyTagParserRuleCall_0());
		}
		this_BuildDependDependencyTag_0=ruleBuildDependDependencyTag
		{
			$current = $this_BuildDependDependencyTag_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDependencyTagAccess().getExecDependDependencyTagParserRuleCall_1());
		}
		this_ExecDependDependencyTag_1=ruleExecDependDependencyTag
		{
			$current = $this_ExecDependDependencyTag_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDependencyTagAccess().getBuildToolDependDependencyTagParserRuleCall_2());
		}
		this_BuildToolDependDependencyTag_2=ruleBuildToolDependDependencyTag
		{
			$current = $this_BuildToolDependDependencyTag_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDependencyTagAccess().getRunDependencyTagParserRuleCall_3());
		}
		this_RunDependencyTag_3=ruleRunDependencyTag
		{
			$current = $this_RunDependencyTag_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRunDependencyTag
entryRuleRunDependencyTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunDependencyTagRule()); }
	iv_ruleRunDependencyTag=ruleRunDependencyTag
	{ $current=$iv_ruleRunDependencyTag.current; }
	EOF;

// Rule RunDependencyTag
ruleRunDependencyTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRunDependencyTagAccess().getRunDependencyTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getRunDependencyTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='run_depend'
		{
			newLeafNode(otherlv_2, grammarAccess.getRunDependencyTagAccess().getRun_dependKeyword_2());
		}
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getRunDependencyTagAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getRunDependencyTagAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRunDependencyTagRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_5='<'
		{
			newLeafNode(otherlv_5, grammarAccess.getRunDependencyTagAccess().getLessThanSignKeyword_5());
		}
		otherlv_6='/'
		{
			newLeafNode(otherlv_6, grammarAccess.getRunDependencyTagAccess().getSolidusKeyword_6());
		}
		otherlv_7='run_depend'
		{
			newLeafNode(otherlv_7, grammarAccess.getRunDependencyTagAccess().getRun_dependKeyword_7());
		}
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getRunDependencyTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleBuildDependDependencyTag
entryRuleBuildDependDependencyTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuildDependDependencyTagRule()); }
	iv_ruleBuildDependDependencyTag=ruleBuildDependDependencyTag
	{ $current=$iv_ruleBuildDependDependencyTag.current; }
	EOF;

// Rule BuildDependDependencyTag
ruleBuildDependDependencyTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBuildDependDependencyTagAccess().getBuildDependDependencyTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getBuildDependDependencyTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='build_depend'
		{
			newLeafNode(otherlv_2, grammarAccess.getBuildDependDependencyTagAccess().getBuild_dependKeyword_2());
		}
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getBuildDependDependencyTagAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getBuildDependDependencyTagAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuildDependDependencyTagRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_5='<'
		{
			newLeafNode(otherlv_5, grammarAccess.getBuildDependDependencyTagAccess().getLessThanSignKeyword_5());
		}
		otherlv_6='/'
		{
			newLeafNode(otherlv_6, grammarAccess.getBuildDependDependencyTagAccess().getSolidusKeyword_6());
		}
		otherlv_7='build_depend'
		{
			newLeafNode(otherlv_7, grammarAccess.getBuildDependDependencyTagAccess().getBuild_dependKeyword_7());
		}
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getBuildDependDependencyTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleExecDependDependencyTag
entryRuleExecDependDependencyTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecDependDependencyTagRule()); }
	iv_ruleExecDependDependencyTag=ruleExecDependDependencyTag
	{ $current=$iv_ruleExecDependDependencyTag.current; }
	EOF;

// Rule ExecDependDependencyTag
ruleExecDependDependencyTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExecDependDependencyTagAccess().getExecDependDependencyTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getExecDependDependencyTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='exec_depend'
		{
			newLeafNode(otherlv_2, grammarAccess.getExecDependDependencyTagAccess().getExec_dependKeyword_2());
		}
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getExecDependDependencyTagAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getExecDependDependencyTagAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExecDependDependencyTagRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_5='<'
		{
			newLeafNode(otherlv_5, grammarAccess.getExecDependDependencyTagAccess().getLessThanSignKeyword_5());
		}
		otherlv_6='/'
		{
			newLeafNode(otherlv_6, grammarAccess.getExecDependDependencyTagAccess().getSolidusKeyword_6());
		}
		otherlv_7='exec_depend'
		{
			newLeafNode(otherlv_7, grammarAccess.getExecDependDependencyTagAccess().getExec_dependKeyword_7());
		}
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getExecDependDependencyTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleBuildToolDependDependencyTag
entryRuleBuildToolDependDependencyTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuildToolDependDependencyTagRule()); }
	iv_ruleBuildToolDependDependencyTag=ruleBuildToolDependDependencyTag
	{ $current=$iv_ruleBuildToolDependDependencyTag.current; }
	EOF;

// Rule BuildToolDependDependencyTag
ruleBuildToolDependDependencyTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBuildToolDependDependencyTagAccess().getBuildToolDependDependencyTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getBuildToolDependDependencyTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='buildtool_depend'
		{
			newLeafNode(otherlv_2, grammarAccess.getBuildToolDependDependencyTagAccess().getBuildtool_dependKeyword_2());
		}
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getBuildToolDependDependencyTagAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getBuildToolDependDependencyTagAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuildToolDependDependencyTagRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_5='<'
		{
			newLeafNode(otherlv_5, grammarAccess.getBuildToolDependDependencyTagAccess().getLessThanSignKeyword_5());
		}
		otherlv_6='/'
		{
			newLeafNode(otherlv_6, grammarAccess.getBuildToolDependDependencyTagAccess().getSolidusKeyword_6());
		}
		otherlv_7='buildtool_depend'
		{
			newLeafNode(otherlv_7, grammarAccess.getBuildToolDependDependencyTagAccess().getBuildtool_dependKeyword_7());
		}
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getBuildToolDependDependencyTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleExportTag
entryRuleExportTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExportTagRule()); }
	iv_ruleExportTag=ruleExportTag
	{ $current=$iv_ruleExportTag.current; }
	EOF;

// Rule ExportTag
ruleExportTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExportTagAccess().getExportTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getExportTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='export'
		{
			newLeafNode(otherlv_2, grammarAccess.getExportTagAccess().getExportKeyword_2());
		}
		otherlv_3='>'
		{
			newLeafNode(otherlv_3, grammarAccess.getExportTagAccess().getGreaterThanSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExportTagAccess().getArbitrary_tagsArbitraryTagParserRuleCall_4_0());
				}
				lv_arbitrary_tags_4_0=ruleArbitraryTag
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExportTagRule());
					}
					add(
						$current,
						"arbitrary_tags",
						lv_arbitrary_tags_4_0,
						"org.spf.packagexml.PackageXML.ArbitraryTag");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='<'
		{
			newLeafNode(otherlv_5, grammarAccess.getExportTagAccess().getLessThanSignKeyword_5());
		}
		otherlv_6='/'
		{
			newLeafNode(otherlv_6, grammarAccess.getExportTagAccess().getSolidusKeyword_6());
		}
		otherlv_7='export'
		{
			newLeafNode(otherlv_7, grammarAccess.getExportTagAccess().getExportKeyword_7());
		}
		otherlv_8='>'
		{
			newLeafNode(otherlv_8, grammarAccess.getExportTagAccess().getGreaterThanSignKeyword_8());
		}
	)
;

// Entry rule entryRuleAuthorTag
entryRuleAuthorTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAuthorTagRule()); }
	iv_ruleAuthorTag=ruleAuthorTag
	{ $current=$iv_ruleAuthorTag.current; }
	EOF;

// Rule AuthorTag
ruleAuthorTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAuthorTagAccess().getAuthorTagAction_0(),
					$current);
			}
		)
		otherlv_1='<'
		{
			newLeafNode(otherlv_1, grammarAccess.getAuthorTagAccess().getLessThanSignKeyword_1());
		}
		otherlv_2='author'
		{
			newLeafNode(otherlv_2, grammarAccess.getAuthorTagAccess().getAuthorKeyword_2());
		}
		(
			otherlv_3='email'
			{
				newLeafNode(otherlv_3, grammarAccess.getAuthorTagAccess().getEmailKeyword_3_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getAuthorTagAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					lv_email_5_0=RULE_STRING
					{
						newLeafNode(lv_email_5_0, grammarAccess.getAuthorTagAccess().getEmailSTRINGTerminalRuleCall_3_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAuthorTagRule());
						}
						setWithLastConsumed(
							$current,
							"email",
							lv_email_5_0,
							"org.spf.packagexml.PackageXML.STRING");
					}
				)
			)
		)?
		otherlv_6='>'
		{
			newLeafNode(otherlv_6, grammarAccess.getAuthorTagAccess().getGreaterThanSignKeyword_4());
		}
		(
			(
				(
					lv_authorText_7_1=RULE_ID
					{
						newLeafNode(lv_authorText_7_1, grammarAccess.getAuthorTagAccess().getAuthorTextIDTerminalRuleCall_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAuthorTagRule());
						}
						addWithLastConsumed(
							$current,
							"authorText",
							lv_authorText_7_1,
							"org.spf.packagexml.PackageXML.ID");
					}
					    |
					lv_authorText_7_2=RULE_STRING
					{
						newLeafNode(lv_authorText_7_2, grammarAccess.getAuthorTagAccess().getAuthorTextSTRINGTerminalRuleCall_5_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAuthorTagRule());
						}
						addWithLastConsumed(
							$current,
							"authorText",
							lv_authorText_7_2,
							"org.spf.packagexml.PackageXML.STRING");
					}
				)
			)
		)*
		otherlv_8='<'
		{
			newLeafNode(otherlv_8, grammarAccess.getAuthorTagAccess().getLessThanSignKeyword_6());
		}
		otherlv_9='/'
		{
			newLeafNode(otherlv_9, grammarAccess.getAuthorTagAccess().getSolidusKeyword_7());
		}
		otherlv_10='author'
		{
			newLeafNode(otherlv_10, grammarAccess.getAuthorTagAccess().getAuthorKeyword_8());
		}
		otherlv_11='>'
		{
			newLeafNode(otherlv_11, grammarAccess.getAuthorTagAccess().getGreaterThanSignKeyword_9());
		}
	)
;

// Entry rule entryRuleUrlTag
entryRuleUrlTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUrlTagRule()); }
	iv_ruleUrlTag=ruleUrlTag
	{ $current=$iv_ruleUrlTag.current; }
	EOF;

// Rule UrlTag
ruleUrlTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getUrlTagAccess().getLessThanSignKeyword_0());
		}
		otherlv_1='url'
		{
			newLeafNode(otherlv_1, grammarAccess.getUrlTagAccess().getUrlKeyword_1());
		}
		otherlv_2='type'
		{
			newLeafNode(otherlv_2, grammarAccess.getUrlTagAccess().getTypeKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getUrlTagAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_type_4_0=RULE_STRING
				{
					newLeafNode(lv_type_4_0, grammarAccess.getUrlTagAccess().getTypeSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUrlTagRule());
					}
					setWithLastConsumed(
						$current,
						"type",
						lv_type_4_0,
						"org.spf.packagexml.PackageXML.STRING");
				}
			)
		)
		otherlv_5='>'
		{
			newLeafNode(otherlv_5, grammarAccess.getUrlTagAccess().getGreaterThanSignKeyword_5());
		}
		(
			(
				lv_url_6_0=RULE_ID
				{
					newLeafNode(lv_url_6_0, grammarAccess.getUrlTagAccess().getUrlIDTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUrlTagRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_6_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_7='<'
		{
			newLeafNode(otherlv_7, grammarAccess.getUrlTagAccess().getLessThanSignKeyword_7());
		}
		otherlv_8='/'
		{
			newLeafNode(otherlv_8, grammarAccess.getUrlTagAccess().getSolidusKeyword_8());
		}
		otherlv_9='url'
		{
			newLeafNode(otherlv_9, grammarAccess.getUrlTagAccess().getUrlKeyword_9());
		}
		otherlv_10='>'
		{
			newLeafNode(otherlv_10, grammarAccess.getUrlTagAccess().getGreaterThanSignKeyword_10());
		}
	)
;

// Entry rule entryRuleArbitraryTag
entryRuleArbitraryTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArbitraryTagRule()); }
	iv_ruleArbitraryTag=ruleArbitraryTag
	{ $current=$iv_ruleArbitraryTag.current; }
	EOF;

// Rule ArbitraryTag
ruleArbitraryTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='<'
		{
			newLeafNode(otherlv_0, grammarAccess.getArbitraryTagAccess().getLessThanSignKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getArbitraryTagAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArbitraryTagRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArbitraryTagAccess().getAttributesAttributeParserRuleCall_2_0());
				}
				lv_attributes_2_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArbitraryTagRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_2_0,
						"org.spf.packagexml.PackageXML.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				otherlv_3='/'
				{
					newLeafNode(otherlv_3, grammarAccess.getArbitraryTagAccess().getSolidusKeyword_3_0_0());
				}
				otherlv_4='>'
				{
					newLeafNode(otherlv_4, grammarAccess.getArbitraryTagAccess().getGreaterThanSignKeyword_3_0_1());
				}
			)
			    |
			(
				otherlv_5='>'
				{
					newLeafNode(otherlv_5, grammarAccess.getArbitraryTagAccess().getGreaterThanSignKeyword_3_1_0());
				}
				(
					(
						(
							lv_innerText_6_1=RULE_ID
							{
								newLeafNode(lv_innerText_6_1, grammarAccess.getArbitraryTagAccess().getInnerTextIDTerminalRuleCall_3_1_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getArbitraryTagRule());
								}
								addWithLastConsumed(
									$current,
									"innerText",
									lv_innerText_6_1,
									"org.spf.packagexml.PackageXML.ID");
							}
							    |
							lv_innerText_6_2=RULE_STRING
							{
								newLeafNode(lv_innerText_6_2, grammarAccess.getArbitraryTagAccess().getInnerTextSTRINGTerminalRuleCall_3_1_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getArbitraryTagRule());
								}
								addWithLastConsumed(
									$current,
									"innerText",
									lv_innerText_6_2,
									"org.spf.packagexml.PackageXML.STRING");
							}
						)
					)
				)*
				otherlv_7='<'
				{
					newLeafNode(otherlv_7, grammarAccess.getArbitraryTagAccess().getLessThanSignKeyword_3_1_2());
				}
				otherlv_8='/'
				{
					newLeafNode(otherlv_8, grammarAccess.getArbitraryTagAccess().getSolidusKeyword_3_1_3());
				}
				this_ID_9=RULE_ID
				{
					newLeafNode(this_ID_9, grammarAccess.getArbitraryTagAccess().getIDTerminalRuleCall_3_1_4());
				}
				otherlv_10='>'
				{
					newLeafNode(otherlv_10, grammarAccess.getArbitraryTagAccess().getGreaterThanSignKeyword_3_1_5());
				}
			)
		)
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getAttributeAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.spf.packagexml.PackageXML.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getAttributeAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.spf.packagexml.PackageXML.STRING");
				}
			)
		)
	)
;

RULE_VERSION_TERMINAL : RULE_INT ('.' RULE_INT)*;

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9'|'.'|','|':'|'/')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : '"' ~('"')* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '<!--' ~(('\n'|'\r'))* '-->' ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
